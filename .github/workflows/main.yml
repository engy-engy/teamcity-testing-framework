name: TeamCity deployment

on: push

jobs:
  # Собирается бекенд и деплоится на стейдж/review app
  backend:
    uses: ./.github/workflows/backend-stage.yml

  # Собирается фронтенд и деплоится на стейдж/review app
  frontend:
    uses: ./.github/workflows/frontend-stage.yml

  # Прогоняются API тесты
  automation-api:
    needs: [ backend, frontend ]
    uses: ./.github/workflows/automation.yml
    with:
      package: api

  # Прогоняются UI тесты
  automation-ui:
    needs: [ backend, frontend ]
    uses: ./.github/workflows/automation.yml
    with:
      package: ui

  # Общий сбор отчетов для API и UI тестов
  collect-reports:
    needs: [ automation-api, automation-ui ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      # Шаг по обработке Swagger-coverage для API
      - name: Run Swagger Coverage for API
        if: ${{ needs.automation-api.result == 'success' }}
        run: .swagger-coverage-commandline/bin/swagger-coverage-commandline -s http://$HOST:8111/app/rest/swagger.json -i target/swagger-coverage-output

      # Шаг по обработке Swagger-coverage для UI (если требуется)
      - name: Run Swagger Coverage for UI
        if: ${{ needs.automation-ui.result == 'success' }}
        run: .swagger-coverage-commandline/bin/swagger-coverage-commandline -s http://$HOST:8111/app/rest/swagger.json -i target/swagger-coverage-output

      # Сохраняем Swagger Coverage
      - name: Save Swagger Coverage
        uses: actions/upload-artifact@v4
        with:
          name: swagger-coverage
          path: |
            swagger-coverage-report.html
            swagger-coverage-results.json

      # Загружаем историю тестов из gh-pages для Allure отчета
      - name: Load test report history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # Строим Allure отчет для API и UI
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results
          subfolder: all

      # Публикуем Allure отчет в gh-pages
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  # Ожидание подтверждения для деплоя в прод
  manual-prod-approval:
    needs: [ collect-reports ]
    runs-on: ubuntu-latest
    environment: 'prod'
    steps:
      - name: Approve backend and frontend to production
        run: echo Approved to production

  # Деплой фронтенда и бекенда на прод
  deploy-prod:
    needs: manual-prod-approval
    uses: ./.github/workflows/deploy-prod.yml